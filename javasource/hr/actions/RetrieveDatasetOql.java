// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package hr.actions;

import com.mendix.core.Core;
import com.mendix.logging.ILogNode;
import com.mendix.systemwideinterfaces.connectionbus.data.IDataTable;
import com.mendix.systemwideinterfaces.connectionbus.requests.types.IOQLTextGetRequest;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import java.util.ArrayList;
import java.util.List;

public class RetrieveDatasetOql extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private java.lang.String DataSetName;
	private java.lang.String ResultEntity;

	public RetrieveDatasetOql(IContext context, java.lang.String DataSetName, java.lang.String ResultEntity)
	{
		super(context);
		this.DataSetName = DataSetName;
		this.ResultEntity = ResultEntity;
	}

	@Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		// BEGIN USER CODE
		ILogNode logger = Core.getLogger("RetrieveDatasetOql");
		List<IMendixObject> resultList = new ArrayList<IMendixObject>();
		IOQLTextGetRequest oqlGetRequest = Core.createOQLTextGetRequestFromDataSet(this.DataSetName);
		String oqlQuery = oqlGetRequest.getQuery();
		logger.info("OQL: " + oqlQuery);
		IDataTable resultDT = Core.retrieveOQLDataTable(getContext(), oqlQuery);
		int colCount = resultDT.getSchema().getColumnCount();
		resultDT.forEach(row -> {
			logger.info("Row: " + row.getValue(getContext(), 0));
			IMendixObject obj = Core.instantiate(getContext(), this.ResultEntity);
			for (int i = 0; i < colCount; i++) {
				String colName = resultDT.getSchema().getColumnSchema(i).getName();
				Object colValue = row.getValue(getContext(), i);
				if (obj.hasMember(colName)) {
					obj.setValue(getContext(), colName, colValue);
				} else {
					logger.info(String.format("Target entity %s does not have attribute named %s", this.ResultEntity, colName));
				}
			}
			resultList.add(obj);
		});
		return resultList;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "RetrieveDatasetOql";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
